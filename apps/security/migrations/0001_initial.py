# Generated by Django 4.0.5 on 2022-06-30 20:08

import apps.security.models
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('icon', models.CharField(max_length=255, null=True, verbose_name='icon')),
            ],
            options={
                'verbose_name': 'module',
                'verbose_name_plural': 'modules',
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('url', models.CharField(max_length=255, verbose_name='url')),
                ('icon', models.CharField(max_length=255, null=True, verbose_name='icon')),
                ('module', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='security.module', verbose_name='module')),
            ],
            options={
                'verbose_name': 'workflow',
                'verbose_name_plural': 'work flows',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='name')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('workflows', models.ManyToManyField(blank=True, to='security.workflow', verbose_name='work flows')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('code', models.CharField(help_text='Código que se usaría para las sincronización con apps externas', max_length=255, null=True, unique=True, verbose_name='code')),
                ('username', models.CharField(max_length=50, null=True, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('email_alternative', models.EmailField(max_length=254, null=True, verbose_name='email_alternative')),
                ('identification_number', models.CharField(max_length=50, null=True, unique=True, verbose_name='identification_number')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='name')),
                ('last_name', models.CharField(max_length=50, verbose_name='last name')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('direction', models.CharField(max_length=255, null=True, verbose_name='direction')),
                ('phone', models.CharField(max_length=20, null=True, verbose_name='phone')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='telephone')),
                ('point', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326, verbose_name='point')),
                ('photo', models.ImageField(null=True, upload_to='photos/')),
                ('holder_s_license', models.ImageField(help_text='Licencia del tomador', null=True, upload_to=apps.security.models.holder_s_license_image_path, verbose_name="holder's license")),
                ('medical_certificate', models.ImageField(help_text='Certificado médico', null=True, upload_to=apps.security.models.medical_certificate_image_path, verbose_name='medical certificate')),
                ('circulation_card', models.ImageField(help_text='Carnet de circulación', null=True, upload_to=apps.security.models.circulation_card_image_path, verbose_name='circulation card')),
                ('is_adviser', models.BooleanField(default=False, help_text='Define si el usuario es un asesor.', verbose_name='is adviser')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='is superuser')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('last_password_change', models.DateTimeField(auto_now_add=True, null=True, verbose_name='last password change')),
                ('jwt_id', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('info', models.JSONField(default=dict)),
                ('last_sync_date', models.DateTimeField(blank=True, null=True, verbose_name='last sync date')),
                ('branch_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branchoffice', verbose_name='branch_office')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('municipality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.municipality', verbose_name='municipality')),
                ('roles', models.ManyToManyField(blank=True, help_text='The roles this user belongs to. A user will get all workflows granted to each of their roles.', related_name='user_set', related_query_name='user', to='security.role', verbose_name='roles')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_work_flows', models.ManyToManyField(blank=True, help_text='Specific work flows for this user.', related_name='user_set', related_query_name='user', to='security.workflow', verbose_name='user work flows')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
    ]
